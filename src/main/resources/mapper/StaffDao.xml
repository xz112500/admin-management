<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dao.StaffDao">
    <resultMap id="StaffMapper" type="com.pojo.Staff">
    <id column="StaffId" property="staffId"/>
    <result column="UserName" property="userName"/>
    <result column="Password" property="password"/>
    <result column="State" property="state"/>
    <result column="StaffName" property="staffName"/>
    <result column="Gender" property="gender"/>
    <result column="Birthday" property="birthday"/>
    <result column="OrganizationId" property="organizationId"/>
    <result column="JobId" property="jobId"/>
    <result column="DirectBoss" property="directBoss"/>
    <result column="Birthplace" property="birthplace"/>
    <result column="Position" property="position"/>
    <result column="PhoneNumber" property="phoneNumber"/>
    <result column="Email" property="email"/>
    <result column="PhotoUrl" property="photoUrl"/>
    <association property="organization" javaType="com.pojo.Organization">
     <id column="OrganizationId" property="organizationId"/>
     <result column="Name" property="name"/>
     <result column="HigherOrgId" property="higherOrgId"/>
     <result column="Remark" property="remark"/>
    </association>
    <association column="job" property="job" javaType="com.pojo.Job">
     <id column="JobId" property="jobId"/>
     <result column="JobName" property="jobName"/>
     <result column="Responsibilities" property="responsibilities"/>
    </association>
    <collection javaType="com.pojo.Askforleave" property="askforleave">
        <id column="LeaveId" property="leaveId"/>
        <result column="ApplyTime" property="applyTime"/>
        <result column="StartTime" property="startTime"/>
        <result column="EndTime" property="endTime"/>
        <result column="Duration" property="duration"/>
        <result column="Applicant" property="applicant"/>
        <result column="Category" property="category"/>
        <result column="Reason" property="reason"/>
        <result column="a_State" property="a_state"/>
        <result column="ApprovalId" property="approvalId"/>
    </collection>
    </resultMap>
<!--    通过id查询员工请假信息-->
    <select id="queryStaffById" resultType="com.pojo.Staff" resultMap="StaffMapper">
        select a.*,c.*,j.*,b.* from staff a
        inner join askforleave b on a.StaffId = b.Applicant
        inner join organization c on c.OrganizationId =
        any (select a.OrganizationId from staff where a.StaffId = #{arg0})
        inner join job j on a.JobId = j.JobId
        order by a.StaffId
        limit #{arg1},#{arg2}
    </select>
 <!--   查询所有员工请假信息-->
    <select id="queryAll" resultMap="StaffMapper">
        select a.*,b.*,c.*,j.* from staff a
        left join askforleave b on a.StaffId = b.Applicant
        left join organization c on c.OrganizationId =a.OrganizationId
        left join job j on a.JobId = j.JobId
        where a.StaffName like concat('%',#{userName},'%')
        order by a.StaffId
    </select>
<!--    查询所有未批准请假-->
    <select id="queryApprove" resultMap="StaffMapper">
        select a.*,b.*,c.* from staff a
        left join askforleave b on a.StaffId=b.Applicant
        left join organization c on c.OrganizationId =a.OrganizationId
        where b.a_State=0
        limit #{pageNum},#{pageSize}
    </select>
<!--    登录验证-->
    <select id="queryUserAndPass" resultType="com.pojo.Staff">
        select * from staff where UserName = #{arg0} and Password = #{arg1}
    </select>
<!--    登陆后更新token-->
    <update id="updateToken">
        update staff set token = #{arg0} where StaffId= #{arg1}
    </update>
    <select id="queryMyLeave" resultMap="StaffMapper">
        select a.*,b.*,c.* from staff a
        left join askforleave b on a.StaffId=b.Applicant
        left join organization c on c.OrganizationId =a.OrganizationId
<where>
    <if test="state!=null and state!=''">
        and a.State=#{state}
    </if>
    <if test="category!=null and category!=''">
        and b.Category=#{category}
    </if>
    <if test="duration!=null and duration!=''">
        and b.Duration=#{duration}
    </if>
</where>
    </select>
    <insert id="addNewStaff" parameterType="com.pojo.Staff">
        insert into am_system.staff( UserName, Password, State, StaffName, Gender, Birthday, OrganizationId, JobId, DirectBoss, Birthplace, Position, PhoneNumber, Email, PhotoUrl)
        values( #{userName}, #{password}, #{state}, #{staffName}, #{gender}, #{birthday}, #{organizationId}, #{jobId},
                #{directBoss}, #{birthplace}, #{position}, #{phoneNumber}, #{email}, #{photoUrl});
    </insert>
    <!--重置密码-->
    <update id="rePassword" parameterType="int" >
        UPDATE am_system.staff SET Password='123456' where StaffId=#{staffId};
    </update>
    <delete id="deleteStaffById" parameterType="int">
        delete from am_system.staff where staffId=#{staffId}
    </delete>
    <select id="queryStaffByName" parameterType="java.lang.String" resultType="com.pojo.Staff">
        select * from am_system.staff where UserName=#{username}
    </select>
    <update id="updateStaffInfo">
        update staff set UserName=#{userName},Password=#{password},State=#{state},StaffName=#{staffName},Gender=#{gender},
        Birthday=#{birthday},OrganizationId=#{organizationId},JobId=#{jobId},DirectBoss=#{directBoss},Birthplace=#{birthplace},
        Position=#{position},PhoneNumber=#{phoneNumber},Email=#{email},PhotoUrl=#{photoUrl}
        where StaffId=#{staffId}
    </update>
    <select id="queryBoss" resultType="com.pojo.Staff">
        select * from staff where DirectBoss=0
    </select>
   <select id="queryListById" parameterType="list" resultType="com.pojo.Staff">
    select * from staff where StaffId in
    <foreach collection="names" item="item" index="index" open="("  close=")" separator=",">
        #{item}
    </foreach>
   </select>
    <delete id="deleteListById" parameterType="list">
        delete from am_system.staff where am_system.staff.StaffId in
    <foreach collection="ids" item="item" open="(" separator="," close=")">
        #{item}
    </foreach>
    </delete>

</mapper>